name: Meshery NSM
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
jobs:
  lint:
    name: Check & Review code
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ secrets.GO_VERSION }}
    - run: GOPROXY=direct GOSUMDB=off go get -u golang.org/x/lint/golint; go list ./... | grep -v /vendor/ | xargs -L1 /home/runner/go/bin/golint -set_exit_status
#   error_check:
#     name: Error check
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ secrets.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go get -u github.com/kisielk/errcheck; /home/runner/go/bin/errcheck -tags draft ./...
#   static_check:
#     name: Static check
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ secrets.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go get -u honnef.co/go/tools/cmd/staticcheck; /home/runner/go/bin/staticcheck -tags draft -checks all ./... # https://staticcheck.io/docs/checks
#   vet:
#     name: Vet
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ secrets.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go vet -tags draft ./...
#   sec_check:
#     name: Security check
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ secrets.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go get github.com/securego/gosec/cmd/gosec; /home/runner/go/bin/gosec ./... # https://github.com/securego/gosec
#   tests:
#     # needs: [lint, error_check, static_check, vet, sec_check]
#     name: Tests
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out code
#       uses: actions/checkout@master
#       with:
#         fetch-depth: 1
#     - name: Setup Go
#       uses: actions/setup-go@v1
#       with:
#         go-version: ${{ secrets.GO_VERSION }}
#     - run: GOPROXY=direct GOSUMDB=off GO111MODULE=on go test -tags draft ./...
  docker:
    name: Docker build and push
    runs-on: ubuntu-latest
    # needs: [build, build_release]
    steps:
    - name: Check out code
      if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && success()
      uses: actions/checkout@master
      with:
        fetch-depth: 1